openapi: 3.0.0
info:
  title: Domaci hra
  version: '1.0'
  description: TMOU domaci hra
  contact:
    name: Petr Valasek
    url: tmou.cz
    email: petr.valasek@volny.cz
servers:
  - url: 'http://localhost:3000'
paths:
  '/teams/{teamSecretPhrase}':
    parameters:
      - schema:
          type: string
        name: teamSecretPhrase
        in: path
        required: true
        description: ''
    get:
      summary: Your GET endpoint
      tags:
        - teams
        - tmou
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamInfo'
        '404':
          description: Not Found
      operationId: get-teams-teamSecretPhrase
      description: get list of points of interests
      requestBody: {}
    post:
      summary: ''
      operationId: post-teams-teamSecretPhrase
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamInfo'
        '404':
          description: Not Found
      description: Perform operation on node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeOperation'
        description: ''
components:
  schemas:
    Node:
      title: Node
      type: object
      description: Single node
      x-tags:
        - node
        - teams
      properties:
        id:
          type: string
        x:
          type: number
          format: float
          example: 0.58
          minimum: 0
          maximum: 1
          exclusiveMinimum: false
          exclusiveMaximum: false
          description: x pos relative to displayed map
        'y':
          type: number
          format: double
          example: 0
          minimum: 0
          maximum: 1
          exclusiveMaximum: false
          description: y pos relative to displayed map
        type:
          type: string
          enum:
            - way
            - junction
            - org
            - team
            - puzzle
          example: way
        '':
          type: string
        data:
          type: string
          description: 'additional node type-specific data, e. g. url for puzzle'
      required:
        - id
        - x
        - 'y'
        - type
    Nodes:
      title: Nodes
      type: object
      description: List of nodes
      x-tags:
        - teams
      properties:
        '':
          type: array
          items:
            $ref: '#/components/schemas/Node'
    TeamState:
      title: Info
      type: object
      description: ''
      properties:
        ranking:
          type: integer
          description: current ranking in the game
        leader:
          type: string
          description: first on this puzzle
        timeBehind:
          type: string
          format: time
          example: '00:22:00'
          description: time behind first on this puzzle
        position:
          type: string
          description: Node ID
      required:
        - position
    TeamInfo:
      title: TeamInfo
      type: object
      properties:
        nodes:
          $ref: '#/components/schemas/Nodes'
        state:
          $ref: '#/components/schemas/TeamState'
        tiles:
          $ref: '#/components/schemas/Tiles'
      required:
        - nodes
        - state
    NodeOperation:
      title: NodeOperation
      type: object
      properties:
        nodeId:
          type: string
        operation:
          type: string
          enum:
            - discover
            - go
            - requestChat
            - requestVideo
          example: go
      required:
        - nodeId
        - operation
      description: user operation on node
      x-tags:
        - teams
        - client
    Tile:
      title: Tile
      type: object
      properties:
        url:
          type: string
          example: /images/1770/8955.png
        x:
          type: integer
          example: 2
          minimum: 0
        'y':
          type: integer
          example: 2
          minimum: 0
      required:
        - url
        - x
        - 'y'
      description: 'map tile with relative coordinates (0..# of cols, 0..# of rows)'
    Tiles:
      title: Tiles
      type: array
      items:
        $ref: '#/components/schemas/Tile'
    Way:
      title: Waz
      type: object
      description: ordered collection of node IDs connected into a shape. Can be closed.
      properties:
        nodes:
          type: array
          description: node IDs
          items:
            type: string
        '':
          type: string
        closed:
          type: boolean
          default: 'false'
      required:
        - nodes
    Ways:
      title: Ways
      type: array
      description: node id
      items:
        $ref: '#/components/schemas/Way'
